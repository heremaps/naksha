<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2017-2019 HERE Europe B.V.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  ~ SPDX-License-Identifier: Apache-2.0
  ~ License-Filename: LICENSE
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.here.xyz</groupId>
    <artifactId>xyz-hub</artifactId>
    <relativePath>../</relativePath>
    <version>1.1.1-SNAPSHOT</version>
  </parent>

  <licenses>
    <license>
      <comments>SPDX-License-Identifier: Apache-2.0</comments>
      <distribution>repo</distribution>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

  <name>XYZ Hub Test</name>
  <description>XYZ Hub integration tests</description>
  <artifactId>xyz-hub-test</artifactId>
  <packaging>jar</packaging>

  <properties>
    <skipTests>true</skipTests>
  </properties>

  <profiles>
    <profile>
      <id>jdk8</id>
      <activation>
        <jdk>(,1.9)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <useIncrementalCompilation>false</useIncrementalCompilation>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <groupId>org.apache.maven.plugins</groupId>
            <configuration>
              <includes>
                <include>**/*.class</include>
              </includes>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <configuration>
                  <encoding>UTF-8</encoding>
                  <skip>${skipTests}</skip>
                </configuration>
                <goals>
                  <goal>integration-test</goal>
                </goals>
                <id>integration-test</id>
              </execution>
              <execution>
                <goals>
                  <goal>verify</goal>
                </goals>
                <id>verify</id>
              </execution>
            </executions>
            <groupId>org.apache.maven.plugins</groupId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jdk9plus</id>
      <activation>
        <jdk>[1.9,)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <useIncrementalCompilation>false</useIncrementalCompilation>
              <!-- This will be needed, when the target is JDK9
              <compilerArgs>
                <arg>- -add-exports java.base/java.lang=ALL-UNNAMED</arg>
                <arg>- -add-exports java.base/java.util=ALL-UNNAMED</arg>
                <arg>- -add-exports java.base/java.util.regex=ALL-UNNAMED</arg>
                <arg>- -add-exports java.base/java.io=ALL-UNNAMED</arg>
                <arg>- -add-exports java.base/java.nio.charset=ALL-UNNAMED</arg>
                <arg>- -add-exports java.base/java.math=ALL-UNNAMED</arg>
                <arg>- -add-exports java.base/java.net=ALL-UNNAMED</arg>
                <arg>- -add-exports java.base/sun.net.spi=ALL-UNNAMED</arg>
                <arg>- -add-exports java.base/sun.nio.cs=ALL-UNNAMED</arg>
                <arg>- -add-exports java.base/jdk.internal.misc=ALL-UNNAMED</arg>
              </compilerArgs>
              -->
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <groupId>org.apache.maven.plugins</groupId>
            <configuration>
              <includes>
                <include>**/*.class</include>
              </includes>
              <argLine>
                --add-opens java.base/java.lang=ALL-UNNAMED
                --add-opens java.base/java.util=ALL-UNNAMED
                --add-opens java.base/java.util.regex=ALL-UNNAMED
                --add-opens java.base/java.io=ALL-UNNAMED
                --add-opens java.base/java.nio.charset=ALL-UNNAMED
                --add-opens java.base/java.math=ALL-UNNAMED
                --add-opens java.base/java.net=ALL-UNNAMED
                --add-opens java.base/sun.net.spi=ALL-UNNAMED
                --add-opens java.base/sun.nio.cs=ALL-UNNAMED
                --add-opens java.base/jdk.internal.misc=ALL-UNNAMED
              </argLine>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <configuration>
                  <encoding>UTF-8</encoding>
                  <skip>${skipTests}</skip>
                  <argLine>
                    --add-opens java.base/java.lang=ALL-UNNAMED
                    --add-opens java.base/java.util=ALL-UNNAMED
                    --add-opens java.base/java.util.regex=ALL-UNNAMED
                    --add-opens java.base/java.io=ALL-UNNAMED
                    --add-opens java.base/java.nio.charset=ALL-UNNAMED
                    --add-opens java.base/java.math=ALL-UNNAMED
                    --add-opens java.base/java.net=ALL-UNNAMED
                    --add-opens java.base/sun.net.spi=ALL-UNNAMED
                    --add-opens java.base/sun.nio.cs=ALL-UNNAMED
                    --add-opens java.base/jdk.internal.misc=ALL-UNNAMED
                  </argLine>
                </configuration>
                <goals>
                  <goal>integration-test</goal>
                </goals>
                <id>integration-test</id>
              </execution>
              <execution>
                <goals>
                  <goal>verify</goal>
                </goals>
                <id>verify</id>
              </execution>
            </executions>
            <groupId>org.apache.maven.plugins</groupId>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <!-- JDK 11+ do no longer have the deprecated JAX-API -->
        <dependency>
          <artifactId>jaxb-api</artifactId>
          <groupId>javax.xml.bind</groupId>
          <version>2.3.1</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
          <version>3.0.2</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <build>
    <plugins>
      <!-- The Help Plugin has 7 goals:
        help:active-profiles lists the profiles which are currently active for the build.
        help:all-profiles lists the available profiles under the current project.
        help:describe describes the attributes of a Plugin and/or a Mojo (Maven plain Old Java Object).
        help:effective-pom displays the effective POM as an XML for the current build, with the active profiles factored in. If verbose, a comment is added to each XML element describing the origin of the line.
        help:effective-settings displays the calculated settings as an XML for the project, given any profile enhancement and the inheritance of the global settings into the user-level settings.
        help:evaluate evaluates Maven expressions given by the user in an interactive mode.
        help:system displays a list of the platform details like system properties and environment variables.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-help-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>show-profiles</id>
            <phase>compile</phase>
            <goals>
              <goal>active-profiles</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>xyz-hub-service</artifactId>
    </dependency>

    <dependency>
      <artifactId>junit</artifactId>
      <groupId>junit</groupId>
      <scope>test</scope>
    </dependency>
    <!-- VertX libraries -->
    <dependency>
      <artifactId>vertx-core</artifactId>
      <groupId>io.vertx</groupId>
    </dependency>
    <dependency>
      <artifactId>vertx-web</artifactId>
      <groupId>io.vertx</groupId>
    </dependency>
    <dependency>
      <artifactId>vertx-config</artifactId>
      <groupId>io.vertx</groupId>
    </dependency>

    <dependency>
      <artifactId>rest-assured</artifactId>
      <groupId>com.jayway.restassured</groupId>
    </dependency>

    <dependency>
      <artifactId>assertj-core</artifactId>
      <groupId>org.assertj</groupId>
    </dependency>

    <dependency>
      <artifactId>awaitility</artifactId>
      <groupId>org.awaitility</groupId>
      <scope>test</scope>
    </dependency>

  </dependencies>
</project>
